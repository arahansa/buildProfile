apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

ext{
    versions = [
        jdk:'1.8',
        /*spring:'4.1.5.RELEASE',*/
        spring:'3.2.9.RELEASE',
        hibernate:'4.3.8.Final',
        springdatajpa:'1.7.2.RELEASE',
        springsecurity:'3.2.5.RELEASE',
        springsocial :'1.1.0.RELEASE'
    ]
}

buildDir = 'build'
//자바 버젼
sourceCompatibility = versions.jdk
targetCompatibility = versions.jdk
//UTF-8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {

    //jspPage
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    runtime "javax.servlet:jstl:1.2"
   
    //spring
    compile("org.springframework:spring-webmvc:${versions.spring}")
    //영속화
    // compile("org.springframework.data:spring-data-jpa:${versions.springdatajpa}")
    // compile("org.hibernate:hibernate-core:${versions.hibernate}")
    // compile("org.hibernate:hibernate-entitymanager:${versions.hibernate}")

    //db
    compile("com.zaxxer:HikariCP:2.3.3")
    compile("com.h2database:h2:1.4.186")
    
    compile 'org.slf4j:slf4j-api:1.7.12'
    
    // json
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.2.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.2.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.2.3'
	compile 'org.projectlombok:lombok:1.16.6'
	
	compile group: 'net.sf.json-lib', name: 'json-lib', version:'2.3', classifier:'jdk15'
    compile group: 'net.sf.json-lib', name: 'json-lib-ext-spring', version:'1.0.2'
    
    compile 'org.hibernate:hibernate-validator:5.1.1.Final'
	compile 'javax.validation:validation-api:1.1.0.Final'
	

    testCompile 'junit:junit:4.12'
}



//초기 경로 디렉터리 생성
task initSrc {
    project.sourceSets*.allSource.srcDirTrees.flatten().dir.each { dir ->
        dir.mkdirs()
    }
}


final String DEFAULT_PROFILE = 'dev'
allprojects {
    if (!project.hasProperty('profile') || !profile) {
        ext.profile = DEFAULT_PROFILE
    }
 
    // 리소스에 각 프로필별 리소스 디렉토리 추가
    sourceSets {
        main {
            resources {
                srcDir "src/main/resources-${profile}"
            }
        }
    }
}




eclipse {
  classpath {
    downloadSources = true
    defaultOutputDir = file("${buildDir}/classes/main")

     file {
            whenMerged { classpath ->
                def entries = classpath.entries
                entries.findAll { it.kind == 'lib' }*.exported = false
          }
    }
  }
  wtp{
      facet {
            facet name: 'jst.web', version: '3.1' // Servlet Spec Version 지정
            facet name: 'jst.java', version: '1.8' // Java Version  1.8
      }
  }
}




tasks.idea.dependsOn initSrc
/* Eclipse 관련 설정들 */
tasks.eclipse.dependsOn cleanEclipse
tasks.eclipse.dependsOn initSrc